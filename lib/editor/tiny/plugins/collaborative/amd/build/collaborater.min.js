define("tiny_collaborative/collaborater",["exports","./jsdiff/index","core/ajax","./options"],(function(_exports,jsDiff,_ajax,Options){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}
/**
   * Storage helper for the Moodle Tiny Autosave plugin.
   *
   * @module      tiny_autosave/autosaver
   * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.register=void 0,jsDiff=_interopRequireWildcard(jsDiff),Options=_interopRequireWildcard(Options);let currentContent="",currentHash="",newHash="";const HEADER="Index: a\n===================================================================\n",COLCURPLACEHOLDER=String.fromCharCode(254),fetchOne=(methodname,args)=>(0,_ajax.call)([{methodname:methodname,args:args}])[0];async function sha1(message){const data=(new TextEncoder).encode(message),hashBuffer=await crypto.subtle.digest("SHA-1",data);return Array.from(new Uint8Array(hashBuffer)).map((byte=>byte.toString(16).padStart(2,"0"))).join("")}const c=window.console,removePlaceholderAtCursor=editor=>{const body=editor.getBody(),walker=document.createTreeWalker(body,NodeFilter.SHOW_TEXT,null,!1);let found=!1;const currentFocusedElement=document.activeElement,isEditorFocused=currentFocusedElement===editor.getBody();for(;walker.nextNode();){const textNode=walker.currentNode,textContent=textNode.textContent,placeholderIndex=textContent.indexOf(COLCURPLACEHOLDER);if(-1!==placeholderIndex){found=!0;const updatedText=textContent.slice(0,placeholderIndex)+textContent.slice(placeholderIndex+1);textNode.textContent=updatedText;const range=editor.dom.createRng();range.setStart(textNode,placeholderIndex),range.collapse(!0),editor.selection.setRng(range);break}}found||console.log("Placeholder not found."),currentFocusedElement&&!isEditorFocused&&currentFocusedElement.focus()};_exports.register=editor=>{editor.on("init",(()=>{let statusBarElement=document.createElement("p");const txt=document.createTextNode("Collaboratiny initialized.");statusBarElement.appendChild(txt),editor.getElement().nextElementSibling.getElementsByClassName("tox-statusbar__right-container")[0].prepend(statusBarElement);let lastChangeId=0;setInterval((()=>{const newContent=editor.getContent();if(sha1(newContent).then((hash=>{if(newHash=hash,""===currentHash)return currentContent=newContent,void(currentHash=newHash);if(newHash!==currentHash){let patch=jsDiff.createPatch("a",currentContent,newContent);return patch=patch.substring(HEADER.length),fetchOne("tiny_collaborate_save_changes",{contextid:Options.getContextId(editor),elementid:editor.targetElm.id,oldcontenthash:currentHash,newcontenthash:newHash,changes:patch,oldid:lastChangeId}).then((result=>{-1===result||(currentContent=newContent,currentHash=newHash,lastChangeId=result)}))}})),""===currentHash)return;fetchOne("tiny_collaborate_set_position",{contextid:Options.getContextId(editor),elementid:editor.targetElm.id,pageinstance:Options.getPageInstance(editor),position:"<empty>"}).then((result=>{c.log("RESULT: "+result)})).fail((err=>{c.error(err)}));let newContent2=editor.getContent();const oldContentWithoutMarker=(editor=>{editor.selection.collapse(),editor.selection.setContent(COLCURPLACEHOLDER);const contentWithMarker=editor.getContent();return removePlaceholderAtCursor(editor),contentWithMarker})(editor);let changesMade=!1;fetchOne("tiny_collaborate_get_changes",{contextid:Options.getContextId(editor),elementid:editor.targetElm.id,currenthash:currentHash,oldid:lastChangeId}).then((result=>{if(result){const changes=result.changes;for(const change of changes){let patch=HEADER+change.change;lastChangeId=change.id,newContent2=jsDiff.applyPatch(newContent2,patch),changesMade=!0}changesMade&&(!1===newContent2?c.log("Patch FAILED"):(editor.setContent(newContent2),currentContent=newContent2,sha1(newContent2).then((hash=>{currentHash=hash})),c.log("Applied patch successfully!")));let s=1===result.positions.length?"":"s";statusBarElement.innerText="".concat(result.positions.length," collaborator").concat(s)}changesMade&&((editor,oldContentWithMarker)=>{const currentContentWithoutMarker=editor.getContent();let changes=jsDiff.diffChars(oldContentWithMarker,currentContentWithoutMarker);c.log("new patch for cursor",changes);let currentContentWithMarker="";changes.forEach((part=>{part.removed&&part.value!==COLCURPLACEHOLDER||(currentContentWithMarker+=part.value)})),editor.setContent(currentContentWithMarker),removePlaceholderAtCursor(editor)})(editor,oldContentWithoutMarker)}))}),1e3)}))}}));

//# sourceMappingURL=collaborater.min.js.map