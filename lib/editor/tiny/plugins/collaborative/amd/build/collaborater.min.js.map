{"version":3,"file":"collaborater.min.js","sources":["../src/collaborater.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Storage helper for the Moodle Tiny Autosave plugin.\n *\n * @module      tiny_autosave/autosaver\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n//import * as Options from './options';\n//import * as Storage from './storage';mm\n//import Log from 'core/log';\n//import {eventTypes} from 'core_form/events';\n//import {getLogSource} from './common';\nimport * as jsDiff from './jsdiff/index';\nimport {call} from 'core/ajax';\nimport * as Options from \"./options\";\n\n\nlet currentContent = '';\nlet currentHash = '';\nlet newHash = '';\n//let newContent = '';\n//let lastHash = '';\nconst INTERVALTIMEOUT = 1000;\n\nconst fetchOne = (methodname, args) => call([{\n    methodname,\n    args,\n}])[0];\n\nasync function sha1(message) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(message);\n    const hashBuffer = await crypto.subtle.digest('SHA-1', data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');\n    return hashHex;\n}\n\n// Example usage:\n\n\n\nexport const register = (editor) => {\n        // Attempt to store the draft one final time before the page unloads.\n    // Note: This may need to be sent as a beacon instead.\n   // document.addEventListener('visibilitychange', visibilityChangedHandler);\n\n    // When the page is submitted as a form, remove the draft.\n   // editor.on('submit', removeAutoSaveSession);\n   // document.addEventListener(eventTypes.formSubmittedByJavascript, handleFormSubmittedByJavascript);\n    const c = window.console;\n    editor.on('init', () => {\n        setInterval(() => {\n            const newContent = editor.getContent();\n            sha1(newContent).then(hash => {\n                newHash = hash;\n                if (currentHash === '') {\n                    currentHash = newHash;\n                }\n                if (newHash !== currentHash) {\n                    const patch = jsDiff.createPatch('a', currentContent, newContent);\n\n                    c.log('contextid', Options.getContextId(editor));\n                    c.log('pagehash', Options.getPageHash(editor));\n                    c.log('pageinstance', Options.getPageInstance(editor));\n                    c.log('elementid', editor.targetElm.id);\n                    c.log('oldcontenthash', currentHash);\n                    c.log('newcontenthash', newHash);\n                    c.log('changes', patch);\n                    return fetchOne('tiny_collaborate_save_changes', {\n                        contextid: Options.getContextId(editor),\n                        pagehash: Options.getPageHash(editor),\n                        pageinstance: Options.getPageInstance(editor),\n                        elementid: editor.targetElm.id,\n                        /*drftid: Options.getDraftItemId(editor),*/\n                        oldcontenthash: currentHash,\n                        newcontenthash: newHash,\n                        changes: patch,\n\n                    })\n                    .then((result) => {\n                       //* pendingPromise.resolve();\n                       // c.log('new hash', newHash);\n                      //  c.log('diff', patch);\n                        currentContent = newContent;\n                        currentHash = newHash;\n                        return result;\n                    });\n                }\n            });\n        }, INTERVALTIMEOUT);\n        /*editor.on('Change', (event) => {\n            c.log('Change collaborative', event);\n        });*/\n        // Setup the Undo handler.\n        //editor.on('AddUndo', undoHandler);\n\n       /* if (editor.dom.isEmpty(editor.getBody())) {\n            Log.info(`Attempting to restore draft`, getLogSource(editor));\n            Storage.restoreDraft(editor);\n        } else {\n            // There was nothing to restore, so we can mark the editor as initialised.\n            Log.warn(`Skipping draft restoration. The editor is not empty.`, getLogSource(editor));\n            Options.markInitialised(editor);\n        }*/\n    });\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","jsDiff","Options","currentContent","currentHash","newHash","_exports","register","editor","c","window","console","on","setInterval","newContent","getContent","async","message","data","TextEncoder","encode","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","byte","toString","padStart","join","sha1","then","hash","patch","createPatch","log","getContextId","getPageHash","getPageInstance","targetElm","id","methodname","args","contextid","pagehash","pageinstance","elementid","oldcontenthash","newcontenthash","changes","result","fetchOne"],"mappings":"uIA8BqC,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,wBAAAJ,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAI,IAAAP,GAAA,OAAAG,EAAAK,IAAAR,GAAA,IAAAS,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAf,EAAAe,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAjB,EAAAe,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAd,EAAAe,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAf,EAAAe,GAAAN,OAAAA,EAAAH,QAAAN,EAAAG,GAAAA,EAAAgB,IAAAnB,EAAAS,GAAAA;;;;;;;KAAA,kFAFrCW,OAAAhB,wBAAAgB,QAEAC,QAAAjB,wBAAAiB,SAGA,IAAIC,eAAiB,GACjBC,YAAc,GACdC,QAAU,GAuFZC,SAAAC,SAhEuBC,SAQrB,MAAMC,EAAIC,OAAOC,QACjBH,OAAOI,GAAG,QAAQ,KACdC,aAAY,KACR,MAAMC,WAAaN,OAAOO,cAxBtCC,eAAoBC,SAChB,MACMC,MADU,IAAIC,aACCC,OAAOH,SACtBI,iBAAmBC,OAAOC,OAAOC,OAAO,QAASN,MAGvD,OAFkBO,MAAMC,KAAK,IAAIC,WAAWN,aAClBO,KAAIC,MAAQA,KAAKC,SAAS,IAAIC,SAAS,EAAG,OAAMC,KAAK,GAEnF,EAkBYC,CAAKnB,YAAYoB,MAAKC,OAKlB,GAJA9B,QAAU8B,KACU,KAAhB/B,cACAA,YAAcC,SAEdA,UAAYD,YAAa,CACzB,MAAMgC,MAAQnC,OAAOoC,YAAY,IAAKlC,eAAgBW,YAStD,OAPAL,EAAE6B,IAAI,YAAapC,QAAQqC,aAAa/B,SACxCC,EAAE6B,IAAI,WAAYpC,QAAQsC,YAAYhC,SACtCC,EAAE6B,IAAI,eAAgBpC,QAAQuC,gBAAgBjC,SAC9CC,EAAE6B,IAAI,YAAa9B,OAAOkC,UAAUC,IACpClC,EAAE6B,IAAI,iBAAkBlC,aACxBK,EAAE6B,IAAI,iBAAkBjC,SACxBI,EAAE6B,IAAI,UAAWF,QA5CnBQ,WA6CkB,gCA7CNC,KA6CuC,CAC7CC,UAAW5C,QAAQqC,aAAa/B,QAChCuC,SAAU7C,QAAQsC,YAAYhC,QAC9BwC,aAAc9C,QAAQuC,gBAAgBjC,QACtCyC,UAAWzC,OAAOkC,UAAUC,GAE5BO,eAAgB9C,YAChB+C,eAAgB9C,QAChB+C,QAAShB,QArDM,EAAAtC,MAAIA,MAAC,CAAC,CACzC8C,sBACAC,aACA,IAqDiBX,MAAMmB,SAIHlD,eAAiBW,WACjBV,YAAcC,QACPgD,SAEf,CAhECC,IAACV,WAAYC,IAgEd,GACF,GAnEU,IAoEG,GAerB,CACJ"}