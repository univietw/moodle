define("tiny_collaborative/jsdiff/patch/apply",["exports","../util/string","./line-endings","./parse","../util/distance-iterator"],(function(_exports,_string,_lineEndings,_parse,_distanceIterator){var e;function applyPatch(source,uniDiff){let options=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof uniDiff&&(uniDiff=(0,_parse.parsePatch)(uniDiff)),Array.isArray(uniDiff)){if(uniDiff.length>1)throw new Error("applyPatch only works with a single input.");uniDiff=uniDiff[0]}(options.autoConvertLineEndings||null==options.autoConvertLineEndings)&&((0,_string.hasOnlyWinLineEndings)(source)&&(0,_lineEndings.isUnix)(uniDiff)?uniDiff=(0,_lineEndings.unixToWin)(uniDiff):(0,_string.hasOnlyUnixLineEndings)(source)&&(0,_lineEndings.isWin)(uniDiff)&&(uniDiff=(0,_lineEndings.winToUnix)(uniDiff)));let lines=source.split("\n"),hunks=uniDiff.hunks,compareLine=options.compareLine||((lineNumber,line,operation,patchContent)=>line===patchContent),fuzzFactor=options.fuzzFactor||0,minLine=0;if(fuzzFactor<0||!Number.isInteger(fuzzFactor))throw new Error("fuzzFactor must be a non-negative integer");if(!hunks.length)return source;let prevLine="",removeEOFNL=!1,addEOFNL=!1;for(let i=0;i<hunks[hunks.length-1].lines.length;i++){const line=hunks[hunks.length-1].lines[i];"\\"==line[0]&&("+"==prevLine[0]?removeEOFNL=!0:"-"==prevLine[0]&&(addEOFNL=!0)),prevLine=line}if(removeEOFNL){if(addEOFNL){if(!fuzzFactor&&""==lines[lines.length-1])return!1}else if(""==lines[lines.length-1])lines.pop();else if(!fuzzFactor)return!1}else if(addEOFNL)if(""!=lines[lines.length-1])lines.push("");else if(!fuzzFactor)return!1;function applyHunk(hunkLines,toPos,maxErrors){let hunkLinesI=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,lastContextLineMatched=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],patchedLines=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[],patchedLinesLength=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,nConsecutiveOldContextLines=0,nextContextLineMustMatch=!1;for(;hunkLinesI<hunkLines.length;hunkLinesI++){let hunkLine=hunkLines[hunkLinesI],operation=hunkLine.length>0?hunkLine[0]:" ",content=hunkLine.length>0?hunkLine.substr(1):hunkLine;if("-"===operation){if(!compareLine(toPos+1,lines[toPos],operation,content))return maxErrors&&null!=lines[toPos]?(patchedLines[patchedLinesLength]=lines[toPos],applyHunk(hunkLines,toPos+1,maxErrors-1,hunkLinesI,!1,patchedLines,patchedLinesLength+1)):null;toPos++,nConsecutiveOldContextLines=0}if("+"===operation){if(!lastContextLineMatched)return null;patchedLines[patchedLinesLength]=content,patchedLinesLength++,nConsecutiveOldContextLines=0,nextContextLineMustMatch=!0}if(" "===operation){if(nConsecutiveOldContextLines++,patchedLines[patchedLinesLength]=lines[toPos],!compareLine(toPos+1,lines[toPos],operation,content))return nextContextLineMustMatch||!maxErrors?null:lines[toPos]&&(applyHunk(hunkLines,toPos+1,maxErrors-1,hunkLinesI+1,!1,patchedLines,patchedLinesLength+1)||applyHunk(hunkLines,toPos+1,maxErrors-1,hunkLinesI,!1,patchedLines,patchedLinesLength+1))||applyHunk(hunkLines,toPos,maxErrors-1,hunkLinesI+1,!1,patchedLines,patchedLinesLength);patchedLinesLength++,lastContextLineMatched=!0,nextContextLineMustMatch=!1,toPos++}}return patchedLinesLength-=nConsecutiveOldContextLines,toPos-=nConsecutiveOldContextLines,patchedLines.length=patchedLinesLength,{patchedLines:patchedLines,oldLineLastI:toPos-1}}const resultLines=[];let prevHunkOffset=0;for(let i=0;i<hunks.length;i++){const hunk=hunks[i];let hunkResult,toPos,maxLine=lines.length-hunk.oldLines+fuzzFactor;for(let maxErrors=0;maxErrors<=fuzzFactor;maxErrors++){toPos=hunk.oldStart+prevHunkOffset-1;let iterator=(0,_distanceIterator.default)(toPos,minLine,maxLine);for(;void 0!==toPos&&(hunkResult=applyHunk(hunk.lines,toPos,maxErrors),!hunkResult);toPos=iterator());if(hunkResult)break}if(!hunkResult)return!1;for(let i=minLine;i<toPos;i++)resultLines.push(lines[i]);for(let i=0;i<hunkResult.patchedLines.length;i++){const line=hunkResult.patchedLines[i];resultLines.push(line)}minLine=hunkResult.oldLineLastI+1,prevHunkOffset=toPos+1-hunk.oldStart}for(let i=minLine;i<lines.length;i++)resultLines.push(lines[i]);return resultLines.join("\n")}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.applyPatch=applyPatch,_exports.applyPatches=function(uniDiff,options){"string"==typeof uniDiff&&(uniDiff=(0,_parse.parsePatch)(uniDiff));let currentIndex=0;!function processIndex(){let index=uniDiff[currentIndex++];if(!index)return options.complete();options.loadFile(index,(function(err,data){if(err)return options.complete(err);let updatedContent=applyPatch(data,index,options);options.patched(index,updatedContent,(function(err){if(err)return options.complete(err);processIndex()}))}))}()},_distanceIterator=(e=_distanceIterator)&&e.__esModule?e:{default:e}}));

//# sourceMappingURL=apply.min.js.map